using System;

namespace CadastroPessoas
{
    // Estrutura que representa uma pessoa
    struct Pessoa
    {
        public string Nome;
        public double Salario;
        public int Idade;
    }

    // Classe estática responsável pelas operações do programa
    static class GerenciadorPessoas
    {
        private const int QuantidadePessoas = 5;
        private static Pessoa[] pessoas = new Pessoa[QuantidadePessoas];

        // Método para receber os dados das pessoas
        public static void CadastrarPessoas()
        {
            for (int i = 0; i < QuantidadePessoas; i++)
            {
                Console.WriteLine($"Cadastro da {i + 1}ª pessoa:");

                Console.Write("Nome: ");
                pessoas[i].Nome = Console.ReadLine();

                Console.Write("Salário: ");
                while (!double.TryParse(Console.ReadLine(), out pessoas[i].Salario))
                {
                    Console.Write("Entrada inválida! Digite um valor numérico para o salário: ");
                }

                Console.Write("Idade: ");
                while (!int.TryParse(Console.ReadLine(), out pessoas[i].Idade))
                {
                    Console.Write("Entrada inválida! Digite um valor inteiro para a idade: ");
                }

                Console.WriteLine(); // Linha em branco para separar cadastros
            }
        }

        // Método para exibir os dados em ordem inversa
        public static void ExibirPessoasInverso()
        {
            Console.Clear(); // Limpa a tela antes da exibição
            Console.WriteLine("Lista de pessoas (ordem inversa):\n");

            for (int i = QuantidadePessoas - 1; i >= 0; i--)
            {
                Console.WriteLine($"Pessoa {QuantidadePessoas - i}:");
                Console.WriteLine($"Nome: {pessoas[i].Nome}");
                Console.WriteLine($"Salário: {pessoas[i].Salario:C}");
                Console.WriteLine($"Idade: {pessoas[i].Idade}");
                Console.WriteLine();
            }
        }
    }

    class Program
    {
        // Método principal que executa o programa
        static void Main(string[] args)
        {
            // Cadastro das pessoas
            GerenciadorPessoas.CadastrarPessoas();

            // Exibição dos dados em ordem inversa
            GerenciadorPessoas.ExibirPessoasInverso();

            // Aguarda tecla antes de encerrar
            Console.WriteLine("Pressione qualquer tecla para sair...");
            Console.ReadKey();
        }
    }
}
